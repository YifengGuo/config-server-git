<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>config-server-git</artifactId>
        <groupId>com.yifeng</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>test-module-2</artifactId>

    <properties>
        <java.bootstrap.classes>${java.home}/lib/rt.jar</java.bootstrap.classes>
        <java.cryptographic.extension.classes>${java.home}/lib/jce.jar
        </java.cryptographic.extension.classes>
        <java.secure.socket.extension.classes>${java.home}/lib/jsse.jar
        </java.secure.socket.extension.classes>
        <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
        <spring-boot.version>2.0.4.RELEASE</spring-boot.version>
        <jackson.version>2.9.6</jackson.version>
        <jackson.moudule.scala.version>2.9.6</jackson.moudule.scala.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_2.11</artifactId>
            <version>${jackson.moudule.scala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.3</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.5.3</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.34</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.9</version>
        </dependency>

        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${elastic.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.5</version>
        </dependency>

        <dependency>
            <groupId>com.hansight</groupId>
            <artifactId>hanstreaming-streaming</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-queryable-state-client-java_2.11</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>3.10.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.11</artifactId>
            <version>${kafka.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.hansight.ueba.StreamingApplication</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>compile</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>encrypt</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.wvengen</groupId>
                        <artifactId>proguard-maven-plugin</artifactId>
                        <version>2.0.14</version>
                        <configuration>
                            <includeDependency>false</includeDependency>
                            <injar>${project.build.finalName}.${project.packaging}</injar>
                            <outjar>${project.build.finalName}-proguard.${project.packaging}</outjar>
                            <libs>
                                <!--
                                    <lib>${java.home}/jmods/java.base.jmod(!**.jar;!module-info.class)</lib>
                                -->
                                <lib>${java.bootstrap.classes}</lib>
                                <lib>${java.cryptographic.extension.classes}</lib>
                                <lib>${java.secure.socket.extension.classes}</lib>
                                <lib>${project.build.directory}/lib</lib>
                            </libs>
                            <options>
                                <!--<option>-keepdirectories **</option>-->
                                <!--<option>-dontshrink</option>-->
                                <!--<option>-keepparameternames</option>-->
                                <!--<option>-keeppackagenames com.hansight.ueba.**</option>-->
                                <!--<option>-keepclasseswithmembers public class * { public static void main(java.lang.String[]); }</option>-->
                                <!--<option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod</option>-->
                                <!--&lt;!&ndash;<option>-keepattributes Signature</option>&ndash;&gt;-->
                                <!--&lt;!&ndash;<option>-keepattributes *Annotation*</option>&ndash;&gt;-->
                                <!--&lt;!&ndash;<option>-keepattributes InnerClasses,EnclosingMethod</option>&ndash;&gt;-->
                                <!--<option>-optimizations !code/allocation/variable</option>-->
                                <!--<option>-optimizations !class/marking/final</option>-->
                                <!--<option>-keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); }</option>-->
                                <!--<option>-keep public class org.springframework.** { *; }</option>-->
                                <!--<option>-dontnote</option>-->

                                <option>-ignorewarnings</option>
                                <option>-keepdirectories **</option>
                                <option>-dontshrink</option>
                                <option>-keepparameternames</option>
                                <option>-keeppackagenames com.hansight.**</option>
                                <option>-renamesourcefileattribute SourceFile</option>
                                <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod,Signature</option>
                                <option>-keepclassmembernames class * { java.lang.Class class$(java.lang.String); java.lang.Class class$(java.lang.String, boolean); }</option>
                                <option>-optimizations !code/allocation/variable</option>
                                <option>-optimizations !class/marking/final</option>

                                <option>-keep class javax.** { *; }</option>
                                <option>-keep class java.** { *; }</option>
                                <option>-keep class org.** { *; }</option>
                                <option>-keep public class com.hansight.ueba.StreamingApplication {
                                    *; }
                                </option>

                                <option>-keep public class com.hansight.ueba.web.StreamingApplicationConfig { *; }</option>
                                <option>-keepclassmembers class * { @org.springframework.beans.factory.annotation.* *; }</option>
                                <option>-keepclassmembers class * { @com.alibaba.fastjson.annotation.* *; }</option>
                                <option>-keepclassmembers class com.hansight.ueba.config.datasource.** { *; }</option>
                                <option>-keep class com.hansight.ueba.web.** { *; }</option>
                                <option>-keep class com.hansight.ueba.services.web.** { *; }
                                </option>
                                <option>-keep public class com.hansight.ueba.config.rule.RulePreviewRender { *; }
                                </option>
                                <option>-keep class org.apache.flink.api.common.** { *; }</option>
                                <option>-keep class org.apache.flink.api.java.tuple.** { *; }
                                </option>
                                <option>-keep class com.hansight.ueba.config.rule.** { *; }</option>
                            </options>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>net.sf.proguard</groupId>
                                <artifactId>proguard-base</artifactId>
                                <version>6.0.3</version>
                                <scope>runtime</scope>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>proguard</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>proguard</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>